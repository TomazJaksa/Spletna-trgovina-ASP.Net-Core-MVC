@model PaginatedList<Voleska.Models.Blog>

@{
    ViewData["Title"] = "Blogi";
}

<h1>Index</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("ADMINISTRATOR"))
{
      <p>
            <a asp-action="Create">Create New</a>
        </p>
   
}

<div class="row">
    <div class="col-md-10">
        <form asp-controller="Blogi" asp-action="Index" method="get">
            <p>
                <input class="p-2" type="text" name="searchString" placeholder="Vnesite naslov bloga..." value="@ViewBag.SearchString">
                <input type="hidden" name="filtriranje" value="@ViewBag.Filtriranje" />
                <button type="submit" class="btn btn-info p-3">
                    <i class="fa fa-search fa-lg" aria-hidden="true"></i>
                </button>
                @if (@ViewBag.SearchString != null)
                {
                    <a asp-action="Index" asp-controller="Blogi">Nazaj na prikaz vseh blogov</a>
                }

            </p>
        </form>


    </div>

    <div class="col-md-2">

        <!-- Split button -->
        <div class="btn-group">
            <a type="button" class="btn btn-info" asp-action="Index" asp-controller="Blogi">

                @if (ViewBag.IzbranFilter == null)
                {
                    <span>Razvrščanje</span>
                }
                else
                {
                    <span>@ViewBag.IzbranFilter</span>
                }

            </a>

            <button type="button" class="btn btn-info dropdown-toggle px-3" data-toggle="dropdown" aria-haspopup="true"
                    aria-expanded="false">
                <span class="sr-only">Toggle Dropdown</span>
            </button>

            <div class="dropdown-menu">
                <a class="dropdown-item" asp-action="Index" asp-controller="Blogi" asp-route-searchString="@ViewBag.SearchString">Privzeto</a>
                <a class="dropdown-item" asp-action="Index" asp-controller="Blogi" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="datumPadajoce">Najnovejši</a>
                <a class="dropdown-item" asp-action="Index" asp-controller="Blogi" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="datumNarascajoce">Najstarejši</a>
                <a class="dropdown-item" asp-action="Index" asp-controller="Blogi" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="priljubljenostPadajoce">Po priljubljenosti</a>
            </div>
        </div>


    </div>
</div>


<div id="prenosPodatkovLajk" class="no-display">
    @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.PrenosPodatkovLajkVC), new { })
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Ime")
            </th>
            <th>
                @Html.DisplayName("Slika")
            </th>
            <th>
                @Html.DisplayName("Povzetek")
            </th>
            <th>
                @Html.DisplayName("Clanek")
            </th>
            <th>
                @Html.DisplayName("Bloger")
            </th>
            <th>
                @Html.DisplayName("Dodan")
            </th>

            <th>
                @Html.DisplayName("SteviloLike")
            </th>
            <th>
                @Html.DisplayName("SteviloDislike")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Naslov)
            </td>
            <td>
                <img src="~/thumbnail/@item.Slika" class="img-fluid" asp-append-version="true" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Povzetek)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Clanek)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bloger)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dodan)
            </td>
            <td id="like-@item.ID">
                @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.SteviloLikeVC), new { steviloLike = item.SteviloLike })

            </td>
            <td id="dislike-@item.ID">

                @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.SteviloDislikeVC), new { steviloDislike = item.SteviloDislike })
            </td>
           
            <td>
                <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                @if (User.Identity.IsAuthenticated && User.IsInRole("ADMINISTRATOR"))
                {
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> 
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>

                }
            </td>
            
                <td>
                    <div>
                        @{
                            @if (User.Identity.IsAuthenticated)
                            {
                                int bloger = 0;
                                int uporabnik = 0;

                                @foreach (var lajkBlogov in item.LajkaniBlogi)
                                {
                                    if (lajkBlogov.ApplicationUserID == ViewBag.UserID)
                                    {
                                        uporabnik = 1;
                                    }
                                    else if (lajkBlogov.ApplicationUserID == ViewBag.BlogerID)
                                    {
                                        bloger = 1;
                                    }
                                }



                                @foreach (var lajkBlogov in item.LajkaniBlogi)
                                {



                                    var obstaja = (lajkBlogov.ApplicationUserID == ViewBag.UserID) ? true : false;

                                    var lajk = (lajkBlogov.Lajk == true && obstaja) ? "disabled" : "";
                                    var dislajk = (lajkBlogov.Lajk == false && obstaja) ? "disabled" : "";

                                    if (bloger == 1 && uporabnik == 0)
                                    {

                                <td id="likeSection-@item.ID" class="d-flex">

                                    @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.LajkVC), new { blogId = item.ID, like = lajk, dislike = dislajk })

                                </td>
                                break;
                            }

                            if (obstaja)
                            {
                                <td id="likeSection-@item.ID" class="d-flex">

                                    @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.LajkVC), new { blogId = item.ID, like = lajk, dislike = dislajk })

                                </td>
                            }




                        }


                            }
                            else
                            {
                                <td>
                                    <a class="nav-link text-white btn btn-primary" id="login" asp-area="Identity" asp-page="/Account/Login">Vpiši se!</a>
                                </td>

                            }
                        }
                        </div>
                        </td>




                    </tr>
        }
    </tbody>
</table>

@{

    var prejsnjaStran = 1;


    if (ViewBag.StevilkaStrani != null)
    {
        prejsnjaStran = ViewBag.StevilkaStrani - 1;
    }
    var naslednjaStran = ViewBag.StevilkaStrani + 1;

    if (ViewBag.StevilkaStrani == null)
    {
        naslednjaStran = 2;
    }

    var izklopi = "";

    <nav aria-label="Page navigation example">
        <ul class="pagination pg-blue">
            @if (!@Model.HasPreviousPage)
            {
                izklopi = "text-muted izklopi";
            }
            <li class="page-item">
                <a class="page-link @izklopi" asp-route-stevilkaStrani="@prejsnjaStran" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="@ViewBag.Filtriranje">Previous</a>
            </li>
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                if (i == @Model.PageIndex)
                {
                    <li class="page-item active">
                        <a class="page-link" asp-route-kliknjenLinkStrani="@i" asp-route-stevilkaStrani="@i" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="@ViewBag.Filtriranje">@i <span class="sr-only">(current)</span></a>
                    </li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" asp-route-kliknjenLinkStrani="@i" asp-route-stevilkaStrani="@i" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="@ViewBag.Filtriranje">@i</a></li>
                }



            }

            @if (@Model.HasNextPage)
            {
                izklopi = "";
            }
            else
            {
                izklopi = "text-muted izklopi";
            }
            <li class="page-item ">
                <a class="page-link @izklopi" asp-route-stevilkaStrani="@naslednjaStran" asp-route-searchString="@ViewBag.SearchString" asp-route-filtriranje="@ViewBag.Filtriranje">Next</a>
            </li>
        </ul>
    </nav>

}



@section Scripts {
    <script>


        function ajaxCreate(blogId, like) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("Create", "LajkaniBlogi")',
                data: {blogId: blogId, like: like},
                dataType: "html",
                success: function (data) {

                    $('#prenosPodatkovLajk').html(data);

                    var like = $('#prenosPodatkov-' + blogId).attr("asp-route-likeAjax");
                    var dislike = $('#prenosPodatkov-' + blogId).attr("asp-route-dislikeAjax");
                    var steviloDislike = $('#prenosPodatkov-' + blogId).attr("asp-route-steviloDislikeAjax");
                    var steviloLike = $('#prenosPodatkov-' + blogId).attr("asp-route-steviloLikeAjax");

                    

                    ajaxGumbiReload(blogId, like, dislike);
                    ajaxSteviloLikeReload(steviloLike, blogId);
                    ajaxSteviloDislikeReload(steviloDislike, blogId);
                },
                failure: function (data) {

                    alert(response);
                },
                error: function (data) {
                    console.log("Error!");
                }

            });
        }

        function ajaxGumbiReload(blogId, like, dislike) {
            $.ajax({
                url: '@Url.Action("GumbiReload", "LajkaniBlogi")',
                data: { blogId: blogId, lajk: like, dislajk: dislike },
                success: function (data) {
                   
                    $('#likeSection-' + blogId).html(data);

                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }

        function ajaxSteviloLikeReload(steviloLike, blogId) {
            $.ajax({
                url: '@Url.Action("SteviloLikeReload", "LajkaniBlogi")',
                data: { steviloLike: steviloLike },
                success: function (data) {

                    $('#like-' + blogId).html(data);

                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
         function ajaxSteviloDislikeReload(steviloDislike, blogId) {
            $.ajax({
                url: '@Url.Action("SteviloDislikeReload", "LajkaniBlogi")',
                data: { steviloDislike: steviloDislike },
                success: function (data) {

                    $('#dislike-' + blogId).html(data);

                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }



    </script>
}
