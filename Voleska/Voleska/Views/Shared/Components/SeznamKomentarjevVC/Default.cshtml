@model IEnumerable<Voleska.Models.Komentar>


@foreach (var item in Model)
{
    var novKomentar = "";
    var novGumb = "";

    if (item.ID == ViewBag.NovKomentar)
    {
        novKomentar = "animated fadeInUp";
        novGumb = "animated fadeInUp";
    }
    else
    {

    }

    if (item.Nivo == 0)
    {
        <div class="@novKomentar card text-dark bg-light mt-5" id="komentar-@item.ID">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <span>@Html.DisplayFor(modelItem => item.ApplicationUser.UserName)</span>
                <span>
                    @item.Dodan.ToString("dd.MM.yyyy, HH:mm")

                    <span class="ml-3">
                        @if (item.ApplicationUser.Id == ViewBag.UserID)
                        {
                            @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.TooltipKomentarVC), new { komentarId = item.ID, blogId = item.BlogID })

                        }


                    </span>
                </span>
            </div>
            <div class="card-body d-flex justify-content-between align-items-center">

                <p class="card-text mb-0">@Html.DisplayFor(modelItem => item.Vsebina)</p>
                <div class="d-flex align-items-center">
                    @{
                        @if (User.Identity.IsAuthenticated)
                        {

                            var najdiLike = 0;
                            var najdiDislike = 0;

                            @foreach (var lajkKomentarjevNotranja in item.LajkaniKomentarji)
                            {
                                if (item.ID == lajkKomentarjevNotranja.KomentarID && lajkKomentarjevNotranja.Lajk == true && lajkKomentarjevNotranja.ApplicationUserID == ViewBag.UserID)
                                {
                                    najdiLike = 1;
                                }
                                else if (item.ID == lajkKomentarjevNotranja.KomentarID && lajkKomentarjevNotranja.Lajk == false && lajkKomentarjevNotranja.ApplicationUserID == ViewBag.UserID)
                                {
                                    najdiDislike = 1;
                                }

                            }

                            @foreach (var lajkKomentarjev in item.LajkaniKomentarji)
                            {


                                var obstaja = (lajkKomentarjev.ApplicationUserID == ViewBag.UserID && lajkKomentarjev.KomentarID == item.ID) ? true : false;

                                var lajk = (lajkKomentarjev.Lajk == true && obstaja) ? "disabled" : "";
                                var dislajk = (lajkKomentarjev.Lajk == false && obstaja) ? "disabled" : "";

                                var lajkaDruge = (najdiLike == 1) ? "disabled" : "";
                                var dislajkaDruge = (najdiDislike == 1) ? "disabled" : "";



                                if (obstaja)
                                {

                                    <div id="likeSection2-@lajkKomentarjev.KomentarID" class="d-flex">

                                        @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.LajkKomentarVC), new { komentarId = lajkKomentarjev.KomentarID, blogId = item.BlogID, like = lajk, dislike = dislajk, steviloLike = item.SteviloLike, steviloDislike = item.SteviloDislike })

                                    </div>
                                    break;

                                }
                                else if (lajkKomentarjev.ApplicationUserID != ViewBag.UserID && lajkKomentarjev.KomentarID == item.ID)
                                {

                                    <div id="likeSection2-@lajkKomentarjev.KomentarID" class="d-flex">

                                        @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.LajkKomentarVC), new { komentarId = lajkKomentarjev.KomentarID, blogId = item.BlogID, like = lajkaDruge, dislike = dislajkaDruge, steviloLike = item.SteviloLike, steviloDislike = item.SteviloDislike })

                                    </div>

                                    break;
                                }



                            }


                        }
                        else
                        {


                            <a class="nav-link text-white btn btn-primary" id="login" asp-area="Identity" asp-page="/Account/Login">Vpiši se!</a>


                        }
                    }
                </div>
            </div>
        </div>

        if (User.Identity.IsAuthenticated)
        {

            <button type="button" id="gumbOdgovori-@item.ID" class=" btn btn-outline-warning mt-3 d-block ml-auto mr-0 @novGumb" data-toggle="modal" data-target="#centralModalSm" onclick="odgovor('@item.ApplicationUser.UserName',@item.ID, '@ViewBag.UserID', @item.BlogID);">
                <i class="fa fa-reply mr-2"></i> Odgovori
            </button>
        }
    }




    if (item.Nivo == 0)
    {
        <div id="noviOdgovori-@item.ID" class="izbrisiMe-@item.ID">

        </div>

        @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.OdgovoriVC), new { komentarId = item.ID, blogId = item.BlogID, nivo = 1 })


    }
    else
    {
        @await Component.InvokeAsync(nameof(Voleska.ViewComponents.ViewComponents.OdgovoriVC), new { komentarId = item.ID, blogId = item.BlogID, nivo = 1 })

    }




}
