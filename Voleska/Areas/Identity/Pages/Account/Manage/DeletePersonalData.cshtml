@page
@model DeletePersonalDataModel
@{
    ViewData["Title"] = "Izbriši račun";
    ViewData["ActivePage"] = ManageNavPages.PersonalData;
}

<h4>@ViewData["Title"]</h4>

<div class="alert alert-warning" role="alert">
    <p>
        <i class="fas fa-exclamation-triangle mr-2"></i>
        <strong>Izbris teh podatkov pomeni odstranitev računa. Tega dejanja se ne da obnoviti. Ste prepričani, da želite izvesti to dejanje?</strong>
    </p>
</div>

<div>
    <form id="delete-user" method="post" class=" needs-validation" novalidate">


        @*<div asp-validation-summary="All" class="text-white"></div>*@

        @if (@ViewBag.Error != null)
        {
            <span id="error" class="bg-danger text-white rounded small p-1 animated fadeIn" style="width: fit-content;">Vnesli ste napačno geslo!</span>
        }

        @if (Model.RequirePassword)
        {
            <div class="form-group md-form md-outline">
                <label asp-for="Input.Password">Geslo</label>
                <input asp-for="Input.Password" class="form-control" required/>
                 <div class="valid-tooltip animated fadeIn">
                    Izgleda okej!
                </div>
                <div class="invalid-tooltip animated fadeIn">
                    <span asp-validation-for="Input.Password" class="text-white"></span>
                </div>
            </div>
        }
        <button class="btn btn-danger mt-2" type="submit">Izbriši podatke in zapri račun</button>
    </form>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>

        $('input[type="password"]').on('click', function (event) {

            $("#error").addClass("animated fadeOut");

            setTimeout(function () {
                $("#error").remove();  
                
            }, 700);
             
        });


        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
